{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Water Tracker",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "Water API"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://water-app-back-1n3p.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Water",
      "description": "Water operations."
    },
    {
      "name": "Auth",
      "description": "Auth operations."
    }
  ],
  "paths": {
    "/api/auth/signup": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Sign up",
        "operationId": "SignUp",
        "description": "Sign up",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password",
                  "repeatPassword"
                ],
                "properties": {
                  "email": {
                    "description": "User email",
                    "type": "string",
                    "example": "andriy7@example.com"
                  },
                  "password": {
                    "description": "User password",
                    "type": "string",
                    "example": "qweqwe123"
                  },
                  "repeatPassword": {
                    "description": "Repeated password which should match with first one",
                    "type": "string",
                    "example": "qweqwe123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created Users"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "description": "accessToken",
                          "example": "NauOmIu9Th39x6Uu5TsfEkZXl4+gdHeMg9CjHAh5"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/409"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/signin": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Sign in",
        "operationId": "SignIn",
        "description": "Sign in",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "User email",
                    "type": "string",
                    "example": "andriy7@example.com"
                  },
                  "password": {
                    "description": "User password",
                    "type": "string",
                    "example": "qweqwe123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully logged in",
            "headers": {
              "Set-Cookie": {
                "description": "Session ID and Refresh Token cookies",
                "schema": {
                  "type": "string",
                  "example": "sessionId=abc123xyz456; HttpOnly; Path=/; Secure; SameSite=Strict\nrefreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxMjM0NTY3ODkwMTIzNDU2NzgyMDM0NTY3ODkwMjM0NTY3ODkw; HttpOnly; Path=/; Secure; SameSite=Strict\n"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "description": "accessToken",
                          "example": "NauOmIu9Th39x6Uu5TsfEkZXl4+gdHeMg9CjHAh5"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh token",
        "operationId": "RefreshToken",
        "description": "Refresh the session token and refresh token.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully refreshed!",
            "headers": {
              "Set-Cookie": {
                "description": "Session ID and Refresh Token cookies",
                "schema": {
                  "type": "string",
                  "example": "sessionId=abc123xyz456; HttpOnly; Path=/; Secure; SameSite=Strict\nrefreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxMjM0NTY3ODkwMTIzNDU2NzgyMDM0NTY3ODkwMjM0NTY3ODkw; HttpOnly; Path=/; Secure; SameSite=Strict\n"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully refreshed!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "description": "The new access token.",
                          "example": "NauOmIu9Th39x6Uu5TsfEkZXl4+gdHeMg9CjHAh5"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout",
        "operationId": "Logout",
        "description": "Logout",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully created user",
            "headers": {
              "Set-Cookie": {
                "description": "Deletes session ID and refresh token cookies",
                "schema": {
                  "type": "string",
                  "example": "sessionId=; HttpOnly; Path=/; Secure; SameSite=Strict; Expires=Thu, 01 Jan 1970 00:00:00 GMT\nrefreshToken=; HttpOnly; Path=/; Secure; SameSite=Strict; Expires=Thu, 01 Jan 1970 00:00:00 GMT\n"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/current": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "get current user",
        "operationId": "getCurrentUser",
        "description": "get current user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404"
                }
              }
            }
          }
        }
      }
    },
    "/api/users": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "edit User",
        "operationId": "editUser",
        "description": "edit User",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "User name",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "gender": {
                    "description": "User gender",
                    "type": "string",
                    "enum": [
                      "male",
                      "female"
                    ]
                  },
                  "weight": {
                    "description": "User weight",
                    "type": "number",
                    "example": 72
                  },
                  "sportParticipation": {
                    "description": "User sport participation",
                    "type": "number",
                    "example": 0
                  },
                  "dailyNorm": {
                    "description": "Daily norm of water",
                    "type": "number",
                    "example": 1500
                  },
                  "avatarUrl": {
                    "description": "User avatar",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          }
        }
      }
    },
    "/api/water": {
      "post": {
        "tags": [
          "Water"
        ],
        "summary": "Create water",
        "operationId": "Create water",
        "description": "Create water",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "description": "count of water user drank",
                    "type": "number",
                    "example": 1500,
                    "default": 0
                  },
                  "date": {
                    "description": "time when user drank, default new Date",
                    "type": "string",
                    "example": "2024-11-29T11:57:39.080+00:00"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Water created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created water"
                    },
                    "data": {
                      "$ref": "#/components/schemas/water"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/water/{id}": {
      "patch": {
        "tags": [
          "Water"
        ],
        "summary": "edit water",
        "operationId": "editWater",
        "description": "edit Water",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "integer",
                    "example": 1500
                  },
                  "date": {
                    "type": "string",
                    "example": "2024-11-29T11:57:39.080+00:00"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Water created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created water"
                    },
                    "data": {
                      "$ref": "#/components/schemas/water"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Water not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "description": "Message about request",
                      "type": "string",
                      "example": "Water not found"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "message"
                      ],
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Water not found"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Water"
        ],
        "summary": "Delete water",
        "operationId": "Delete water",
        "description": "Delete water",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Water deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 204
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted water"
                    },
                    "data": {
                      "$ref": "#/components/schemas/water"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Water not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "description": "Message about request",
                      "type": "string",
                      "example": "Water not found"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "message"
                      ],
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Water not found"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/water/month": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get water by month",
        "operationId": "getWaterByMonth",
        "description": "Get water by month",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "year",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 2024
            }
          },
          {
            "in": "query",
            "name": "month",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 11
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get water by month",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully get water by month!"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "$ref": "#/components/schemas/water"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/water/day": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get water by day",
        "operationId": "getWaterByDay",
        "description": "Get water by day",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "year",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 2024
            }
          },
          {
            "in": "query",
            "name": "month",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 11
            }
          },
          {
            "in": "query",
            "name": "day",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 24
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get water by day",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully get water by day!"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "$ref": "#/components/schemas/water"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/allUsers": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "get all Users",
        "operationId": "getAllUsers",
        "description": "get all users",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data",
                    "countOfDocuments"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": [
                          "https://res.cloudinary.com/dwwbuktym/image/upload/v1733345187/y5x48ijv…",
                          "https://res.cloudinary.com/dwwbuktym/image/upload/v1733345187/y5x48ijv…",
                          "https://res.cloudinary.com/dwwbuktym/image/upload/v1733345187/y5x48ijv…"
                        ]
                      }
                    },
                    "countOfDocuments": {
                      "type": "integer",
                      "example": 36
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "400": {
        "type": "object",
        "required": [
          "status",
          "message",
          "data"
        ],
        "properties": {
          "status": {
            "type": "integer",
            "example": 400
          },
          "message": {
            "description": "Message about request",
            "type": "string",
            "example": "Bad request"
          },
          "data": {
            "type": "object",
            "required": [
              "message"
            ],
            "properties": {
              "message": {
                "type": "string",
                "example": "Passwords not match"
              }
            }
          }
        }
      },
      "401": {
        "type": "object",
        "required": [
          "status",
          "message",
          "data"
        ],
        "properties": {
          "status": {
            "type": "integer",
            "example": 401
          },
          "message": {
            "description": "Message about request",
            "type": "string",
            "example": "Unauthorized"
          },
          "data": {
            "type": "object",
            "required": [
              "message"
            ],
            "properties": {
              "message": {
                "type": "string",
                "example": "Unauthorized"
              }
            }
          }
        }
      },
      "404": {
        "type": "object",
        "required": [
          "status",
          "message",
          "data"
        ],
        "properties": {
          "status": {
            "type": "integer",
            "example": 404
          },
          "message": {
            "description": "Message about request",
            "type": "string",
            "example": "User not found or password not match"
          },
          "data": {
            "type": "object",
            "required": [
              "message"
            ],
            "properties": {
              "message": {
                "type": "string",
                "example": "User not found or password not match"
              }
            }
          }
        }
      },
      "409": {
        "type": "object",
        "required": [
          "status",
          "message",
          "data"
        ],
        "properties": {
          "status": {
            "type": "integer",
            "example": 409
          },
          "message": {
            "description": "Message about request",
            "type": "string",
            "example": "User already exist"
          },
          "data": {
            "type": "object",
            "required": [
              "message"
            ],
            "properties": {
              "message": {
                "type": "string",
                "example": "User already exist"
              }
            }
          }
        }
      },
      "user": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "gender",
          "email",
          "weight",
          "SportParticipation",
          "dailyNorm",
          "avatarUrl",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "example": "674245a0c5604835d8faa4fb"
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "gender": {
            "type": "string",
            "example": "female"
          },
          "email": {
            "type": "string",
            "example": "qwe@gmail.com"
          },
          "weight": {
            "type": "number",
            "example": 23
          },
          "SportParticipation": {
            "type": "number",
            "example": 0
          },
          "dailyNorm": {
            "type": "number",
            "example": 1500
          },
          "avatarUrl": {
            "type": "string",
            "example": "https://res.cloudinary.com/dwwbuktym/image/upload/v1732649373/b8zveo5r…"
          },
          "createdAt": {
            "type": "string",
            "example": "2024-11-26T16:17:52.819+00:00"
          },
          "updatedAt": {
            "type": "string",
            "example": "2024-11-26T16:17:52.819+00:00"
          }
        }
      },
      "water": {
        "type": "object",
        "required": [
          "_id",
          "amount",
          "userId",
          "date",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "example": "674245a0c5604835d8faa4fb"
          },
          "amount": {
            "type": "number",
            "example": 1500
          },
          "userId": {
            "type": "string",
            "example": "674245a0c5604835d8faa4fb"
          },
          "date": {
            "type": "string",
            "example": "2024-11-29T11:57:39.080+00:00"
          },
          "createdAt": {
            "type": "string",
            "example": "2024-11-29T11:58:09.224+00:00"
          },
          "updatedAt": {
            "type": "string",
            "example": "2024-11-29T11:58:09.224+00:00"
          }
        }
      }
    }
  }
}